DROP PROCEDURE ZEB_ListDelayedJobs
GO
CREATE PROCEDURE ZEB_ListDelayedJobs
    @FromDateTime DateTime ,
    @ToDateTime  DateTime
AS
	
    select top 100  
		--BATCHJOBHISTORY.ORIGSTARTDATETIME, 
		BATCHJOBHISTORY.STARTDATETIME, 
		BATCHJOBHISTORY.CAPTION,
		datediff(SECOND, BATCHJOBHISTORY.ORIGSTARTDATETIME,BATCHJOBHISTORY.STARTDATETIME)/60 [StartDelay (min)],
		datediff(SECOND, BATCHJOBHISTORY.STARTDATETIME, BATCHJOBHISTORY.ENDDATETIME)/60 [Exec delay (min)],
		EGBCBATCHJOB.STARTTIMETHRESHOLDWARNING [Err Start Threshold],
		EGBCBATCHJOB.EXECUTIONTIMETHRESHOLDWARNING [Err Exec Threshold],
		EGBCBATCHJOB.STARTTIMETHRESHOLDERROR [Warn Start Threshold],
		EGBCBATCHJOB.EXECUTIONTIMETHRESHOLDERROR [Warn Exec Threshold],
		case when (datediff(SECOND, BATCHJOBHISTORY.ORIGSTARTDATETIME,BATCHJOBHISTORY.STARTDATETIME)/60>EGBCBATCHJOB.STARTTIMETHRESHOLDERROR) THEN 'ERROR STARTTIME' 
		else case when (datediff(SECOND, BATCHJOBHISTORY.STARTDATETIME,BATCHJOBHISTORY.ENDDATETIME)/60>EGBCBATCHJOB.EXECUTIONTIMETHRESHOLDERROR) THEN 'ERROR EXECTTIME'
		else case when (datediff(SECOND, BATCHJOBHISTORY.ORIGSTARTDATETIME,BATCHJOBHISTORY.STARTDATETIME)/60>EGBCBATCHJOB.STARTTIMETHRESHOLDWARNING) THEN 'WARN STARTTIME' 
		else case when (datediff(SECOND, BATCHJOBHISTORY.STARTDATETIME,BATCHJOBHISTORY.ENDDATETIME)/60>EGBCBATCHJOB.EXECUTIONTIMETHRESHOLDWARNING) THEN 'WARN EXECTTIME'
		else 'n/a'
		END END END END [INFO]
	from BATCHJOBHISTORY
	join BATCHJOB 
	on BATCHJOB.RECID = BATCHJOBHISTORY.BATCHJOBID
	join EGBCBATCHJOB
	on EGBCBATCHJOB.BATCHJOB = BATCHJOB.RECID
	where BATCHJOBHISTORY.status<>0
	and BATCHJOBHISTORY.ORIGSTARTDATETIME>=@FromDateTime --dateadd(day,-3,getdate())
	and BATCHJOBHISTORY.ORIGSTARTDATETIME<=@ToDateTime --getdate()
	and EGBCBATCHJOB.STARTTIMETHRESHOLDERROR<>0
	and EGBCBATCHJOB.EXECUTIONTIMETHRESHOLDERROR<>0
	and (datediff(SECOND, BATCHJOBHISTORY.ORIGSTARTDATETIME,BATCHJOBHISTORY.STARTDATETIME)/60>EGBCBATCHJOB.STARTTIMETHRESHOLDWARNING
		 OR datediff(SECOND, BATCHJOBHISTORY.STARTDATETIME, BATCHJOBHISTORY.ENDDATETIME)/60>EGBCBATCHJOB.EXECUTIONTIMETHRESHOLDWARNING)
	order by STARTDATETIME
RETURN 0 
GO
------------------------------------------------------------------------------------------------------------


declare @FromDateTime datetime = dateadd(mi, -5, getdate())
declare @ToDateTime datetime = getdate()
exec ZEB_ListDelayedJobs @FromDateTime, @ToDateTime

DECLARE @tableHTML  NVARCHAR(MAX) ;  
DECLARE @ListDelayedJobs CURSOR;


SET @tableHTML =  
    N'<H1>Work Order Report</H1>' +  
    N'<table border="1">' +  
    N'<tr><th>Work Order ID</th><th>Product ID</th>' +  
    N'<th>Name</th><th>Order Qty</th><th>Due Date</th>' +  
    N'<th>Expected Revenue</th></tr>' +  
    CAST ( ( select * from (exec ZEB_ListDelayedJobs @FromDateTime, @ToDateTime)  
              FOR XML PATH('tr'), TYPE   
    ) AS NVARCHAR(MAX) ) +  
    N'</table>' ;  

EXEC msdb.dbo.sp_send_dbmail @recipients='yourfriend@Adventure-Works.com',  
    @subject = 'Work Order List',  
    @body = @tableHTML,  
    @body_format = 'HTML' ;  
